@model BLL_User.Model.UserDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/ManageUser/css")
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ListUser</title>
</head>
<body>
    <h1 class="text-center">Manage User</h1>
    <div class="container">
        <div class="row">
            <div class="col-2">
                <a class="btn btn-primary" id="myButton">+ Add</a>
            </div>
            <table id="tableUser" class="table table-striped">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>UserName</th>
                        <th>FirstName</th>
                        <th>LastName</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Created Time</th>
                        <th>Action</th>
                        <th>Change Password</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
            <div class="col-4">
                <a class="btn btn-danger" href="/Login/UserLogout">Logout</a>
            </div>
        </div>
    </div>
    <div class="modal" id="exampleModal" tabindex="-1" aria-labelledby="loginModalLabel" data-bs-backdrop="static">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content p-4">
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body p-0">
                    <form method="post" id="formUser">
                        <h3 class="text-center">ADD USER</h3>
                        <div class="row pb-2">
                            <div class="col-6">
                                <label class="form-label"><sup>*</sup>FirstName:</label>
                                <input type="text" class="form-control" name="FirstName" id="addFirstName" />
                            </div>
                            <div class="col-6">
                                <label class="form-label"><sup>*</sup>LastName:</label>
                                <input type="text" class="form-control" name="LastName" id="addLastName" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 pb-2">
                                <label class="form-label"><sup>*</sup>Email:</label>
                                <input type="email" class="form-control" name="Email" id="addEmail" />
                            </div>

                            <div class="col-12 pb-2">
                                <label class="form-label"><sup>*</sup>Phone:</label>
                                <input type="text" class="form-control" name="Phone" id="addPhone" />
                            </div>

                            <div class="col-12 pb-2">
                                <label class="form-label"><sup>*</sup>UserName:</label>
                                <input type="text" class="form-control" name="UserName" id="addUserName" />
                            </div>
                            <div class="col-12 pb-2">
                                <label class="form-label"><sup>*</sup>Password:</label>
                                <input type="password" class="form-control" name="Password" id="password" />
                            </div>
                            <div class="col-12 pb-2">
                                <label class="form-label"><sup>*</sup>Confirm Password:</label>
                                <input type="password" class="form-control" name="confirm_password" />
                            </div>
                        </div>
                        <div class="pt-3 d-flex justify-content-end">
                            <button class="btn btn-primary w-25">Add User</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="inforUserDetail" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true" data-bs-backdrop="static">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content p-4">
                <div class="d-flex justify-content-end">
                    <button id="closeEdit" class="btn btn-close"></button>
                </div>
                <div class="modal-body p-0">
                    <h3 class="text-center">EDIT USER</h3>
                    <form action="/User/EditUser" method="post" id="formEdit">
                        <div class="row pb-2">
                            <div class="col-6">
                                <label class="form-label"><sup>*</sup>FirstName:</label>
                                <input type="text" class="form-control" name="FirstName" id="editFirstName" />
                            </div>
                            <div class="col-6">
                                <label class="form-label"><sup>*</sup>LastName:</label>
                                <input type="text" class="form-control" name="LastName" id="editLastName" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 pb-2">
                                <label class="form-label"><sup>*</sup>Email:</label>
                                <input type="email" class="form-control" name="Email" id="editEmail" />
                            </div>
                            <input type="hidden" class="form-control" name="Id" id="editId" readonly />
                            <div class="col-12 pb-2">
                                <label class="form-label"><sup>*</sup>Phone:</label>
                                <input type="text" class="form-control" name="Phone" id="editPhone" />
                            </div>

                            <div class="col-12 pb-2">
                                <label class="form-label"><sup>*</sup>UserName:</label>
                                <input type="text" class="form-control" name="UserName" id="editUserName" readonly />
                            </div>
                            <input type="hidden" class="form-control" name="Password" id="editPassword" />
                        </div>
                        <div class="pt-3 d-flex justify-content-end">
                            <button class="btn btn-primary w-25" type="submit">Save User</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
@section scripts {
    <script>
        function showModalAdd() {
            var myModal = new bootstrap.Modal(document.getElementById('exampleModal'));
            myModal.show();
        }
        document.getElementById('myButton').addEventListener('click', showModalAdd);


        function showModal() {
            var myModal = new bootstrap.Modal(document.getElementById('inforUserDetail'));
            myModal.show();
        }

        function hideModal() {
            var myModal = document.getElementById('inforUserDetail');
            var modalInstance = bootstrap.Modal.getInstance(myModal);

            modalInstance.hide();
        }
        document.getElementById('closeEdit').addEventListener('click', hideModal);
    </script>
    <script>

    </script>
    <script>
        function EditUser(id) {
            $.ajax({
                url: "/User/GetUserToEdit",
                type: "get",
                data: {
                    userId: id
                },
                success: function (response) {
                    $('#editId').val(response.Id);
                    $('#editFirstName').val(response.FirstName);
                    $('#editLastName').val(response.LastName);
                    $('#editEmail').val(response.Email);
                    $('#editPhone').val(response.Phone);
                    $('#editUserName').val(response.UserName);
                    $('#editPassword').val(response.Password);
                    showModal();
                },
                error: function (xhr) {
                    console.log(first_name)
                    console.log(xhr)
                }
            });
        };


    </script>

    <script>
        function DeleteUser(id) {
            Swal.fire({
                title: "Are you sure?",
                text: "Will you delete user",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete user!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/User/DeleteUser",
                        type: "get",
                        data: {
                            userId: id
                        },
                        success: function (response) {
                            Swal.fire({
                                title: "Deleted!",
                                text: "User has been deleted",
                                icon: "success"
                            });
                            setTimeout(() => {
                                location.reload();
                            }, 2000)
                        },
                        error: function (xhr) {
                            console.log(xhr)
                        }
                    })
                }
            });
        }
    </script>

    <script>
        $(document).ready(function () {
            $('#tableUser').DataTable({
                "serverSide": true,
                "processing": true,
                "aLengthMenu": false,
                "iDisplayLength": 8,
                scrollX: true,
                "language": {
                    searchPlaceholder: "Tìm kiếm theo username",

                },
                "columnDefs": [{
                    "targets": [1],
                    "className": "text-center"
                }],
                "ajax": {
                    "url": "/User/ListUser",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns":
                    [
                        {
                            "data": null,
                            "render": function (data, type, full, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            },
                            "name": "STT", autoWidth: true,
                        },
                        { "data": "UserName", "name": "UserName", autoWidth: true },
                        { "data": "FirstName", "name": "FirstName", autoWidth: true },
                        { "data": "LastName", "name": "LastName", autoWidth: true },
                        { "data": "Email", "name": "Email", autoWidth: true },
                        { "data": "Phone", "name": "Phone", autoWidth: true },
                        {
                            "data": "CreatedTime", "name": "Created Time", autoWidth: true,
                            "render": function (data, type, full, meta) {
                                if (full.CreatedTime) {
                                    var timestamp = full.CreatedTime.match(/\d+/)[0];
                                    var myDate = new Date(parseInt(timestamp, 10));
                                    var options = { day: '2-digit', month: '2-digit', year: 'numeric' };
                                    return myDate.toLocaleDateString('en-GB', options);
                                }
                                return "";
                            }
                        },
                        {
                            "data": null,
                            "render": function (data, type, full, meta) {
                                var actionButtons = '';
                                actionButtons += '<button class="btn btn-success" onclick="EditUser(' + full.Id + ')">Edit</button> ';
                                actionButtons += '<button class="btn btn-danger" onclick="DeleteUser(' + full.Id + ')">Delete</button>';
                                return actionButtons;
                            },
                            "orderable": false
                        },
                        {
                            "data": null,
                            "render": function (data, type, full, meta) {
                                var actionButtons = '';
                                actionButtons += '<a class="btn btn-info w-100 text-white" href="/ChangePassword/View/' + full.Id + '">Change</a> ';
                                return actionButtons;
                            },
                            "orderable": false
                        }
                    ]
            });
            $('#dt-search-0').css('width', '220px')
            function parseJsonDate(jsonDateString) {
                return moment(jsonDateString).format("D-MMM-YY").toUpperCase();
            }

            $('#dt-length-0').css('display', 'none');
            $('.dt-length label').css('display', 'none');
        })
    </script>

    <script>
        $(document).ready(function () {
            $.validator.addMethod("RegexPassword", function (value, element) {
                return /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!#$%^&*?])[a-zA-Z0-9!#$%^&*?]{8,}$/.test(value);
            }, "Password at least 1 special char, digit and upper letter");


            $("#formUser").validate({
                rules: {
                    FirstName: {
                        required: true,
                        maxlength: 50
                    },
                    LastName: {
                        required: true,
                        maxlength: 50
                    },
                    UserName: {
                        required: true,
                        minlength: 8
                    },
                    Password: {
                        required: true,
                        minlength: 8,
                        maxlength: 100
                    },
                    confirm_password: {
                        required: true,
                        equalTo: password
                    },
                    Phone: {
                        required: true,
                        minlength: 10,
                        maxlength: 10
                    },
                    Email: {
                        required: true,
                        email: true,
                        maxlength: 50
                    }
                },
                messages: {
                    FirstName: {
                        required: "Please enter your first name"
                    },
                    LastName: {
                        required: "Please enter your last name"
                    },
                    UserName: {
                        required: "Please enter your user name",
                        minlength: "User name at least 8 character"
                    },
                    Password: {
                        required: "Please enter your password",
                        minlength: "Password at least 8 character",
                        maxlength: "Password over 100 characters"
                    },
                    confirm_password: {
                        required: "Please enter your re-password",
                        equalTo: "Not match password"
                    },
                    Phone: {
                        required: "Please enter your phone number",
                        minlength: "Phone number at least 10 digits",
                        maxlength: "Phone number can over 10 digits"
                    },
                    Email: {
                        required: "Please enter your email",
                        email: "Email must be correct format example@domain.com",
                        maxlength: "Email can not over 50 characters"
                    }
                },
                submitHandler: function (form) {
                    AddUser();
                    return false;
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $.validator.addMethod("RegexPassword", function (value, element) {
                return /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!#$%^&*?])[a-zA-Z0-9!#$%^&*?]{8,}$/.test(value);
            }, "Password at least 1 special char, digit and upper letter");


            $("#formUser").validate({
                rules: {
                    FirstName: {
                        required: true,
                        maxlength: 50
                    },
                    LastName: {
                        required: true,
                        maxlength: 50
                    },
                    UserName: {
                        required: true,
                        minlength: 8
                    },
                    Password: {
                        required: true,
                        minlength: 8,
                        maxlength: 100,
                        RegexPassword: true
                    },
                    confirm_password: {
                        required: true,
                        equalTo: password
                    },
                    Phone: {
                        required: true,
                        minlength: 10,
                        maxlength: 10
                    },
                    Email: {
                        required: true,
                        email: true,
                        maxlength: 50
                    }
                },
                messages: {
                    FirstName: {
                        required: "Please enter your first name"
                    },
                    LastName: {
                        required: "Please enter your last name"
                    },
                    UserName: {
                        required: "Please enter your user name",
                        minlength: "User name at least 8 character"
                    },
                    Password: {
                        required: "Please enter your password",
                        minlength: "Password at least 8 character",
                        maxlength: "Password over 100 characters",
                        RegexPassword: "Password at least 1 special char, digit and upper letter"
                    },
                    confirm_password: {
                        required: "Please enter your re-password",
                        equalTo: "Not match password"
                    },
                    Phone: {
                        required: "Please enter your phone number",
                        minlength: "Phone number at least 10 digits",
                        maxlength: "Phone number can over 10 digits"
                    },
                    Email: {
                        required: "Please enter your email",
                        email: "Email must be correct format example@domain.com",
                        maxlength: "Email can not over 50 characters"
                    }
                },
                submitHandler: function (form) {
                    form.preventDefault();
                }
            });
        });
        $(document).ready(function () {
            $('#formUser').on('submit', function (e) {
                e.preventDefault();
                
            })
        })
        
        function AddUser() {
            const formData = {
                FirstName: $('#addFirstName').val(),
                LastName: $('#addLastName').val(),
                Email: $('#addEmail').val(),
                Phone: $('#addPhone').val(),
                UserName: $('#addUserName').val(),
                Password: $('#password').val()
            };
            $.ajax({
                url: "/User/AddUser",
                type: "post",
                contentType: "application/json",
                data: JSON.stringify(formData),
                success: function (response) {
                    if (response.success == true) {
                        Swal.fire({
                            position: "top-end",
                            icon: "success",
                            title: response.message,
                            showConfirmButton: false,
                            timer: 3000
                        });
                        var myModal = document.getElementById('exampleModal');
                        var modalInstance = bootstrap.Modal.getInstance(myModal);
                        modalInstance.hide();
                        setTimeout(() => {
                            window.location.href('/User/ListUser');
                        } , 2000);
                        
                    }
                    if (response.success == false) {
                        Swal.fire({
                            position: "top-end",
                            icon: "error",
                            title: response.message,
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                    console.log(response.success);
                },
                error: function (xhr) {
                    console.log(xhr)
                }
            });
        }
    </script>


    <script>
        const result = '@TempData["updateSuccess"]';
        if (result) {
            Swal.fire({
                position: "top-end",
                icon: "success",
                title: result,
                showConfirmButton: false,
                timer: 1500
            });
    }

        const resultFailed = '@TempData["updateFailed"]';
        if (resultFailed) {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: resultFailed,
                showConfirmButton: false,
                timer: 1500
            });
    }

    const resultAdd = '@TempData["AddSuccess"]';
    if (resultAdd) {
        Swal.fire({
            position: "top-end",
            icon: "success",
            title: resultAdd,
            showConfirmButton: false,
            timer: 1500
        });
    }

    


    </script>
}
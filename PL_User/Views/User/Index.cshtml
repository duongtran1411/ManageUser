@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using BLL_User.Enumeration;
@Styles.Render("~/Datatable/css")
@Styles.Render("~/ManageUser/css")
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Danh sách người dùng</h3>
                    <div class="d-flex justify-content-sm-end">
                        <a href="/User/AddUser" class="btn btn-info btnTableCustom mb-1 " id="myButton"><i class="fas fa-plus-circle"></i> Add</a>
                    </div>
                </div>

                <div class="card-body">
                    <table id="tableUser" class="table table-striped">
                        <thead>
                            <tr>
                                <th>No.</th>
                                <th>UserName</th>
                                <th>FirstName</th>
                                <th>LastName</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Created Time</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Validate/Js")
    @Scripts.Render("~/CheckPermission/Js")
    <script>

        $('#btnAdd').on('click', function () {
            $('#exampleModal').modal('hide');
        });

        $('#btnEdit').on('click', function () {
            $('#inforUserDetail').modal('hide');
        });

        function EditUser(id) {
            $.ajax({
                url: "/User/GetUserToEdit",
                type: "get",
                data: {
                    userId: id
                },
                success: function (response) {
                    $('#editId').val(response.Id);
                    $('#editFirstName').val(response.FirstName);
                    $('#editLastName').val(response.LastName);
                    $('#editEmail').val(response.Email);
                    $('#editPhone').val(response.Phone);
                    $('#editUserName').val(response.UserName);
                    $('#editPassword').val(response.Password);
                    $('#inforUserDetail').modal({
                        backdrop: 'static',
                        keyboard: false
                    });
                    $('#inforUserDetail').modal('show');
                },
                error: function (xhr) {
                    console.log(first_name)
                    console.log(xhr)
                }
            });
        };

        function DeleteUser(id) {
            Swal.fire({
                title: "Are you sure?",
                text: "Will you delete user",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete user!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/User/DeleteUser",
                        type: "get",
                        data: {
                            userId: id
                        },
                        success: function (response) {
                            if (response.success == true) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: response.message,
                                    icon: "success",
                                    timer: 3000
                                });
                                setTimeout(() => {
                                    location.reload();
                                }, 2000)
                            }

                            if (response.notifi == false) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: response.errorMessage,
                                    icon: "error",
                                    timer: 3000
                                });
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr)
                        }
                    })
                }
            });
        };

        const result = '@TempData["updateSuccess"]';
        if (result) {
            Swal.fire({
                position: "top-end",
                icon: "success",
                title: result,
                showConfirmButton: false,
                timer: 1500
            });
        }

        const resultFailed = '@TempData["updateFailed"]';
        if (resultFailed) {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: resultFailed,
                showConfirmButton: false,
                timer: 1500
            });
        }

        const resultAdd = '@TempData["AddSuccess"]';
        if (resultAdd) {
            Swal.fire({
                position: "top-end",
                icon: "success",
                title: resultAdd,
                showConfirmButton: false,
                timer: 1500
            });
        }

        $(document).ready(function () {
            $('#tableUser').DataTable({
                "serverSide": true,
                "processing": true,
                "orderMulti": false,
                "ordering": false,
                "lengthMenu": [
                    [10, 20, 30],
                    [10, 20, 30]
                ],
                "language": {
                    searchPlaceholder: "Tìm kiếm theo username",
                },
                "columnDefs": [{
                    "targets": [1],
                    "className": "text-center"
                }],
                "ajax": {
                    "url": "/User/ListUser",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns":
                    [
                        {
                            "data": null,
                            "render": function (data, type, full, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            },
                            "name": "STT", autoWidth: true,
                        },
                        { "data": "UserName", "name": "UserName", autoWidth: true },
                        { "data": "FirstName", "name": "FirstName", autoWidth: true },
                        { "data": "LastName", "name": "LastName", autoWidth: true },
                        { "data": "Email", "name": "Email", autoWidth: true },
                        { "data": "Phone", "name": "Phone", autoWidth: true },
                        {
                            "data": "CreatedTime", "name": "Created Time", autoWidth: true,
                            "render": function (data, type, full, meta) {
                                if (full.CreatedTime) {
                                    var timestamp = full.CreatedTime.match(/\d+/)[0];
                                    var myDate = new Date(parseInt(timestamp, 10));
                                    var options = { day: '2-digit', month: '2-digit', year: 'numeric' };
                                    return myDate.toLocaleDateString('en-GB', options);
                                }
                                return "";
                            }
                        },
                        {
                            "data": null,
                            "name": "Action",
                            "render": function (data, type, full, meta) {
                                var actionButtons = '';
                                if (CheckPermission('@RoleEnums.User_Updated')) {
                                    actionButtons += '<a class="btn" href="/User/EditUser/' + full.Id + '"><i class="far fa-edit"></i></a> ';
                                }
                                if (CheckPermission('@RoleEnums.User_Deleted')) {
                                    actionButtons += '<a id="btnBlock" class="btn" onclick="DeleteUser(' + full.Id + ')"><i class="fas far fa-trash-alt"></i></a>';
                                }
                                actionButtons += '<a class="btn" href="/User/ViewChange/' + full.Id + '"><i class="fas fa-redo"></i></a> ';
                                return actionButtons;
                            },
                            "orderable": false
                        }
                    ]
            });

            if (CheckPermission('@RoleEnums.User_Created')) {
                $('#myButton').css('display', 'block');
            } else {
                $('#myButton').css('display', 'none');
            }

            $('#dt-search-0').css('width', '220px')
        })

    </script>
}
@using BLL_User.Enumeration
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="../../Content/plugins/fancyTree/dist/skin-vista/ui.fancytree.min.css">
<link href="fancytree/skin-win8/ui.fancytree.css" rel="stylesheet" type="text/css">
<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Danh sách quyền</h3>
                    <div class="d-flex justify-content-sm-end">
                        <a href="/Permission/AddPermission" class="btn btn-info btnTableCustom" id="btnCreate"><i class="fas fa-plus-circle"></i>Thêm mới</a>
                    </div>
                </div>
                <div class="card-body">
                    <div id="tree"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="../../Content/plugins/fancyTree/dist/jquery.fancytree-all-deps.min.js"></script>
    <script>
        $(function () {
            $('#tree').fancytree
                ({
                    source: {
                        url: "/Permission/ListPermission",
                        cache: false
                    },
                    renderNode: function (event, data) {
                        var node = data.node;
                        var nodeSpan = $(node.span);
                        if (!nodeSpan.data('rendered')) {
                            var control = "";
                            if ('@RoleEnums.Permission_Updated') {
                                control += '<a class="btn btnActionTable btnActionTreeView" href="/Permission/EditPermission/' + node.key + '"><i class="far fa-edit"></i></a>';
                            }
                            if ('@RoleEnums.Permission_Deleted') {
                                control += '<a class="btn btnActionTable btnActionTreeView" onclick="DeletePermission(' + node.key + ')"><i class="fas far fa-trash-alt"></i></a>';
                            }
                            nodeSpan.prepend(control);
                            nodeSpan.data("rendered", true);
                        }
                    }
                });
         })

        const addSuccess = '@TempData["AddSucess"]';
        if (addSuccess) {
            Swal.fire({
                position: "top-end",
                icon: "success",
                title: addSuccess,
                showConfirmButton: false,
                timer: 1500
            });
        }

        const updateSuccess = '@TempData["UpdateSuccess"]';
        if (updateSuccess) {
            Swal.fire({
                position: "top-end",
                icon: "success",
                title: updateSuccess,
                showConfirmButton: false,
                timer: 1500
            });
        }


        function DeletePermission(id) {
            Swal.fire({
                title: "Are you sure?",
                text: "Will you delete role",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete user!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Permission/DeletePermission",
                        type: "GET",
                        data: {
                            permissionId: id
                        },
                        success: function (response) {
                            if (response.success == true) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: response.message,
                                    icon: "success",
                                    timer: 3000
                                });
                                console.log("deleted success");
                                setTimeout(() => {
                                    location.reload();
                                }, 2000)
                            }

                            if (response.success == false) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: response.message,
                                    icon: "error",
                                    timer: 3000
                                });
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr)
                        }
                    })
                }
            });
        };



    </script>
}


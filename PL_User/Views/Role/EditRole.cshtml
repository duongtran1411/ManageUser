@model BLL_User.Model.RoleDTO

@{
    ViewBag.Title = "EditRole";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="../../Content/plugins/fancyTree/dist/skin-vista/ui.fancytree.min.css">
<div class="card card-secondary">
    <div class="card-header">
        <h3 class="card-title">Edit Role</h3>
    </div>
    @using (Html.BeginForm("EditRole", "Role", FormMethod.Post, new { id = "formEdit" }))
    {
        <div class="card-body">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            <div class="row">
                <div class="col-5">
                    <div class="form-group">
                        <label>Tên vai trò</label>
                        @Html.TextBoxFor(m => m.RoleName, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Người tạo</label>
                        @Html.TextBoxFor(m => m.CreatedBy, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="form-group">
                        <label>Mô tả</label>
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                    </div>
                    
                        @Html.HiddenFor(m => m.PostPermission, new { @id = "PostPermission", @class = "form-control" })
                </div>
                <div class="col-7">
                    <div id="treePermission"></div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button type="submit" class="btn btn-info btnEditCustom" id="btnSave"><i class="far fa-save"></i>Lưu</button>
            <a href="/Role/Index" class="btn btn-secondary btnEditCustom" id="btnBack"><i class="fas fa-sign-out-alt"></i>Hủy</a>
        </div>
    }
</div>

@section scripts{
    <script src="../../Content/plugins/fancyTree/dist/jquery.fancytree-all-deps.min.js"></script>
    <script>
        $(function () {
            $("#treePermission").fancytree({
                checkbox: true,
                selectMode: 3,
                source: @Html.Raw(Model.ListPermission),
                init: function (event, data) {
                    data.tree.visit(function (n) {
                        n.expanded = true;
                        if (n.data.preselected) n.setSelected(true);
                    });
                },
                loadChildren: function (event, ctx) {
                    ctx.node.fixSelection3AfterClick();
                },
                select: function (event, data) {
                    var selKeys = $.map(data.tree.getSelectedNodes(), function (node) {
                        return node.key;
                    });
                    $("#PostPermission").val(selKeys.join(","));
                }
            });
        });

        const updateFailed = '@TempData["UpdateFailed"]';
        if (updateFailed) {
            Swal.fire({
                position: "top-end",
                icon: "error",
                title: updateFailed,
                showConfirmButton: false,
                timer: 1500
            });
        }

        const updateSuccess = '@TempData["UpdateSucess"]';
        if (updateSuccess) {
            Swal.fire({
                position: "top-end",
                icon: "success",
                title: updateSuccess,
                showConfirmButton: false,
                timer: 1500
            });
        }
    </script>
}
